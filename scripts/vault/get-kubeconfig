#!/usr/bin/env bash

set -e

cluster="$1"
user="$2"
api="$3"

usage="get-kubeconfig [cluster-name] [username] [api-host]
Get a kubeconfig for a specific user and cluster."

if [ -z $cluster ]; then
    echo "$usage"
    exit 1
fi

if [ -z $user ]; then
    echo "$usage"
    exit 1
fi

if [ -z $api ]; then
    echo "$api"
    exit 1
fi

out=$( vault write -format=json /${cluster}/pki/issue/${user} common_name="$user" ttl="24h" exclude_cn_from_sans=true )

ca_b64=$( echo ${out} | jq -r '.data.issuing_ca' | base64)
cert_b64=$( echo ${out} | jq -r '.data.certificate' | base64)
key_b64=$( echo ${out} | jq -r '.data.private_key' | base64)

cat > ${user}.kubeconfig <<EOF
apiVersion: v1
kind: Config
current-context: default
clusters:
- name: ${cluster}
  cluster:
    server: https://${api}
    certificate-authority-data: ${ca_b64}
users:
- name: ${user}
  user:
    client-certificate-data: ${cert_b64}
    client-key-data: ${key_b64}
contexts:
- context:
    cluster: ${cluster}
    user: ${user}
  name: default
EOF
